# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing cookie-cutter-template

on:
  push:
    branches: [ "master", "feat/poetry" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade cruft
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Create and test the package
      run: |
        mkdir toml_managed && cd toml_managed
        cruft create --no-input https://github.com/42nick/cookie-py-template
        cd awesome_project
        pip install -e .[dev]
    - name: Test the package
      run: |
        tox

    - name: Create and test the package with poetry managed dependencies
      run: |
        cd && mkdir poetry_managed && cd poetry_managed
        cruft create --no-input https://github.com/42nick/cookie-py-template -c feat/poetry
        cd awesome_project
        poetry install 
    - name: Test the package
      run: |
        tox